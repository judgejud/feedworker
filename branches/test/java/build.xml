<project name="FeedWorker" default="build_all" basedir=".">

	<!--
                                                   ┌─► jarMain ───────────────────────────┐
                                                   ├─► jarWebupdater ─────────────────────┤
              ┌─► pack_multios ───┐                ├─► jarReconnectOptionals ─────────────┤
    pack_all ─┼─► pack_linux ─────┼─┬─► build_all ─┼─► jarRestarter ──────────────────────┼─► compile ─┬─► clean
              ├─► pack_mac ───────┤ │              ├─► copy_jarOptionals ─► jarOptionals ─┤            │
              └─► pack_windows ───┘ │              ├─► copy_compiled ─────────────────────┘            │
    sign ───────────────────────────┘              └─► copy_res ───────────────────────────────────────┘
    
    dlcEnabledBuild = sign & pack_all
    
    -->

	<property name="src" value="./src" />
	<property name="cls" value="./bin" />
	<property name="dist" value="./dist" />
	<property name="lib" value="./lib" />
	<property name="res" value="${src}/org/feedworker/resource" />
	<!--
	<property name="keystore" value="${user.home}/Desktop/jDownloader.keystore" />
	
	<property name="pack.multios.name" value="JDownloader_multios_${svn.revision}.zip" />
	<property name="pack.linux.name" value="JDownloader_linux_${svn.revision}.tar.bz2" />
	<property name="pack.mac.name" value="JDownloader_mac_${svn.revision}.zip" />
	<property name="pack.mac.dmg.name" value="JDownloader_mac_${svn.revision}.dmg" />
	<property name="pack.windows.name" value="JDownloader_windows_${svn.revision}.zip" />

	<property name="exclude.windows" value="**/*.exe, **/*.bat, **/*.dll, **/windows, **/windows/**/*" />
	<property name="exclude.linux" value="**/*.sh, **/*.so, **/dbus, **/dbus/**/*, **/linux, **/linux/**/*" />
	<property name="exclude.mac" value="**/*.scpt, **/osx, **/osx/**/*, **/mac, **/mac/**/*" />

	<property name="exe.windows.script" value="${res}/nsis/nsis-setup.nsi" />
	<property name="exe.web.script" value="${res}/nsis/webinstaller.nsi" />
	-->

	<path id="classpath">
		<fileset dir="${dist}/${lib}" includes="**/*.jar" />
	</path>

	<property name="classpath" value="${toString:classpath}" />

	<echo message="${basedir}" />

	<property file="version.properties" />
	<property environment="env" />
	<property name="version.major" value="1" />
	<property name="version.minor" value="0" />

	<loadfile property="version.revision" srcFile="${src}/.svn/entries">
		<filterchain>
			<headfilter lines="1" skip="3" />
			<striplinebreaks />
		</filterchain>
	</loadfile>
	
	<buildnumber file="build.number" />
	
	<property name="version.build" value="${build.number}" />

	<property name="version.number" value="${version.major}.${version.minor}.${version.revision}.${version.build}" />
	
	<tstamp>
		<format property="build.date" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>
	
	<property name="build.date" value="${build.date}" />

	<propertyfile file="${src}/org/feedworker/config/version.properties">
		<entry key="version.major" value="${version.major}" />
		<entry key="version.minor" value="${version.minor}" />
		<entry key="version.revision" value="${version.revision}" />
		<entry key="version.build" value="${version.build}" />
		<entry key="version.number" value="${version.number}" />
		<entry key="build.date" value="${build.date}" />
	</propertyfile>

	<echo>Building Version ${version.number}</echo>

	<!-- Deletes the old build -->
	<target name="clean">
		<delete dir="${cls}" />
		<mkdir dir="${cls}" />
		<delete dir="${dist}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${dist}/lib" />
	</target>

	<!-- Compiles the code -->
	<target name="compile" depends="copy_res">
		<javac srcdir="${src}" destdir="${cls}" encoding="UTF-8" source="1.6" target="1.6">
			<classpath refid="classpath" />
		</javac>
		<copy todir="${cls}">
			<fileset dir="${src}" includes="**/org/feedworker/resource/*" />
		</copy>
		<echo message="Finished." />
	</target>

	<!-- build_all -->
	<target name="build_all" depends="copy_res, jarMain">
		<echo message="Finished." />
	</target>

	<!-- Copies all the additional ressources -->
	<target name="copy_res" depends="clean">
		<copy todir="${dist}/lib">
			<fileset dir="${lib}" includes="**/*" />
		</copy>
		<copy todir="${dist}/lib">
			<fileset dir="../[Java] - JFacility/dist" includes="**/*" />
		</copy>
		<copy todir="${dist}/lib">
			<fileset dir="../[Java] - OpenSanskrit/dist" includes="**/*" />
		</copy>
	</target>

	<!-- Make the default jar -->
	<target name="jarMain" depends="compile">
		<!--
		<jar file="${jd}/libs/JAntiCaptcha.jar" manifest="${dist}/Manifest.MF">
			<fileset dir="${cls}">
				<include name="jd/captcha/**" />
				<exclude name="jd/captcha/methods/**" />
			</fileset>
		</jar>
		<delete file="${dist}/Manifest.MF" failonerror="false" />
		-->

		<pathconvert pathsep=" " dirsep="/" property="class-path">
			<map from="${basedir}/dist" to="." />
			<path>
				<fileset dir="${dist}/${lib}" includes="**/*.jar" />
			</path>
			<!--
			<mapper type="regexp" from="[\\/]dist[\\/]JDownloader[\\/](libs[\\/].*)" to="\1" />
		    -->
		</pathconvert>

		<manifest file="${dist}/Manifest.MF">
			<attribute name="Created-By" value="Luka Judge" />
			<attribute name="Main-Class" value="org.feedworker.client.FeedWorkerClient" />
			<attribute name="Implementation-Version" value="${version.number}" />
			<attribute name="Built-Date" value="${build.date}" />
			<attribute name="SplashScreen-Image" value="org/feedworker/resource/SplashImage.png" />
			<!-- plugins that serialize own classes have to be put in the classpath -->
			<attribute name="Class-Path" value="${class-path}" />
		</manifest>

		<jar file="${dist}/FeedWorker-${version.number}.jar" manifest="${dist}/Manifest.MF">
			<fileset dir="${cls}">
				<include name="**/*.class" />
				<include name="**/resource/*" />
				<!--
				<exclude name="jd/controlling/reconnect/plugins/*/**" />
				<exclude name="jd/captcha/**" />
				-->
			</fileset>
		</jar>
		<echo message="${res}" />
		<delete file="${dist}/Manifest.MF" failonerror="false" />
	</target>
</project>